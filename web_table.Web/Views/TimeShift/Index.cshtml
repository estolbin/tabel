@using System.Globalization
@using web_tabel.Domain
@model IEnumerable<web_table.Web.ViewModel.EmployeeTimeShiftViewModel>
@{
    Layout = "_Layout";
}

<h1><b>Tабель за @ViewBag.PeriodName</b></h1>


@{
    var dts = Model.ElementAt(0).Dates;
    CultureInfo russian = new CultureInfo("ru-RU");
    int datesCol = dts.Count;
}


<div class="row mb-3">
    <div class="col-md-6">
        <div id="FormDiv">

        @using (Html.BeginForm("Index","TimeShift",new { isDepartment = true}, FormMethod.Post, false ,new { @class = "d-flex align-items-center"}))
        {

            <label for="depList" class="form-label m-2">Подразделения</label>
            <select id="depList" class="form-select " multiple name="depId">
                @foreach (var d in ViewBag.Departments)
                {
                    <option selected="@d.Selected" value="@d.Value">@d.Text</option>        
                }
            </select>
            <div class="input-group-append">
                <input type="submit" value="Отбор" class="btn-sm btn-primary"/>
             </div>
        }
        </div>
    </div>
    <div class="col-md-6">
        <div>

        @using (Html.BeginForm("Index","TimeShift",new {isOrganization = true}, FormMethod.Post, false, new { @class = "d-flex align-items-center"}))
        {
            <label for="orgList" class="form-label m-2">Организации</label>
            @Html.DropDownList("orgId", new SelectList(ViewBag.Organizations, "Value", "Text"), new { id = "orgList", @class = "form-select", multiple="multiple"})
            <div class="input-group-append">
                <input type="submit" value="Отбор" class="btn-sm btn-primary" />
            </div>
        }
        </div>
    </div>
</div>

<table id="timeShiftTable" class="display" style="width:100%">
    <thead class="thead-dark">
        <tr>
            <th scope="col" class="text-center">Сотрудник</th>
            <th scope="col" class="text-center"><small>Должность<div class="border-top my-1"></div>График</small></th>
            <th scope="col">Организация</th>
            <th scope="col">Подразделение</th>
            <th scope="col">План<div class="border-top my-1"></div>Факт</th>
            @foreach (var item in dts)
            {
                <th scope="col">
                    @if (item <= (ViewData["lockDate"] as DateTime?) && ViewData["lockDate"] != null)
                    {
                        <div class="text-decoration-none font-bold">
                            @item.ToString("dd")<br />
                            @russian.DateTimeFormat.GetAbbreviatedDayName(item.DayOfWeek)

                        </div>                         
                    }
                    else
                    {
                        <a onclick="showInPopup('@Url.Action("FillInDay","TimeShift", new {date = item},Context.Request.Scheme)','Заполнить по плану')" class="text-decoration-none font-bold">
                            @item.ToString("dd")<br />
                            @russian.DateTimeFormat.GetAbbreviatedDayName(item.DayOfWeek)
                        </a>
                    }
                </th>
            }
        </tr>
    </thead>
    <tbody>


        @{
            int orgNum = 1;
            ViewBag.orgNum = orgNum;
            var deps = ViewBag.DepartmentsRaw as IEnumerable<Department>;
            foreach(var org in ViewBag.OrganizationsRaw)
            {
                if (Model.Where(x => x.OrganizationId == org.Id.ToString()).ToList().Count == 0) continue;


                var empByOrg = Model.Where(x => x.OrganizationId == org.Id.ToString());
                var depsByOrg = deps.Where(x => x.Organization.Id == org.Id);

                foreach(var d in depsByOrg)
                {

                    var empByDep = empByOrg.Where(x => x.DepartmentId == d.Id.ToString());
                    if (empByDep.Count() == 0) continue;


                    @foreach (var emp in empByDep)
                    {
                        @(await Html.PartialAsync("_EmployeeTimeShift", emp))@*, new ViewDataDictionary(ViewData) { { "lockDate", ViewBag.LockDate} }));*@
                    }
                }

                orgNum++;
            }
        }

    </tbody>
</table>

@(await Html.PartialAsync("Error"))

@section Scripts
{

    <script type="text/javascript">

        var errorTimer = null;

        function ShowErrorModal(errorMessage) {
            let MessageBody = document.getElementById('ErrorModalBody');
            MessageBody.innerHTML = errorMessage;
            if (errorMessage.length > 0) { 
                $('#ErrorModal').modal('show');
            }
        }


        $(document).ready(function () {
            var msg = "@TempData["ErrorMessage"]";
            if (msg && msg.length > 0){
                ShowErrorModal(msg);
            }
            let errorElement = document.getElementById("error");
            errorElement.style.display = "none";
        });

        $(document).on('click', '#btn_FillInDay', function (e) {
            $.ajax({
                url: '/TimeShift/FillInDate',
                type: 'POST',
                success: function (response) {
                    window.location.href = response.redirectToUrl;
                }
            });
        });

        $(document).on('change','#typesList', function () {
            let v = $(this).val();
            let plan = $('#plannedHoursType').find('#disabledInput').text()
            if (v == plan) {
                let newVal = $('#plannedHours').find('#disabledInput').text();
                $('#HoursWorked').val(newVal);
            }
        });

        $(document).on('change keydown paste input', '#HoursWorked', function () {
            let fact = parseFloat(($(this).val()).replace(',','.'));
            let plan = parseFloat($('#plannedHours').find('#disabledInput').text());
            if (fact > plan) {
                if (errorTimer != null) {
                    clearTimeout(errorTimer);
                    errorTimer = null;
                }
                
                let errorElement = document.getElementById("error");
                errorElement.innerHTML = "Не может быть больше плана!";
                errorElement.style.display = 'block';

                $(this).val(0);
                errorTimer = setTimeout(function () { errorElement.style.display = 'none'; }, 2000)
            }
        });

    </script>
}


